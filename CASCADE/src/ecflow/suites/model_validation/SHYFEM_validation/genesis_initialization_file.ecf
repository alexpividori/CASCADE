%manual
%include <man/genesis_initialization_file.man>
%end

%include <head_4_bash.h>                              
                                                       
%include <etc/general_shy.ini>

#====================================================

cd $tmp_dir_root || ERROR

pre_initialization_file="$init_file_dir/pre_initialization_file.txt"

#====================================================

n_line=1  # this variable rapresent the number line we are considering inside the "pre_initialization_file.txt"

while IFS=";" read -r  domain period        # new version for multi-line pre initialization file
do                                       # all input files are in CSV format with a semicolon (;) as a separator


        if [[ "$domain" == "" ]]; then continue ; fi    # used to exclude void lines

gr=$domain   # gr is the group
se=$period   # se is the "season" entente like a general time period

echo "I'm elaborating the line number: ${n_line} of \"$pre_initialization_file\"."
echo "For this line the monitoring stations region is:\"$gr\" and the time period considered is:\"$se\"."

case $se in
season1)
  t1="2018-01-01T00:00:00"
  t2="2018-03-31T23:59:59"
;;
season2)
  t1="2018-04-01T00:00:00"
  t2="2018-06-30T23:59:59"  
;;
season3)
  t1="2018-07-01T00:00:00"
  t2="2018-09-30T23:59:59"
;;
season4)
  t1="2018-10-01T00:00:00"
  t2="2018-12-31T23:59:59"
;;
1S)
  t1="2018-01-01T00:00:00"
  t2="2018-06-30T23:59:59"
;;
2S)
  t1="2018-07-01T00:00:00"
  t2="2018-12-31T23:59:59"
;;
tot)  
  t1="2018-01-01T00:00:00"   # tot mean all annual period for all years available
  t2="2018-12-31T23:59:59"
;;
*)
  t1=${se%%_*}   # the starting date is the string part that precede the "_" character // double %% is present only in .ecf version
  t2=${se##*_}   # the ending   date is the string part that follow the  "_" character
;;
esac

#=======================================================================
#                            Place selection 
#=======================================================================

case $gr in
group1)
awk -v time_i="$t1" -v time_f="$t2"  '{ print $0";"time_i";"time_f}' stations_file_group1.txt > initialization_file_$n_line.txt
;;
group2)
awk -v time_i="$t1" -v time_f="$t2"  '{ print $0";"time_i";"time_f}' stations_file_group2.txt > initialization_file_$n_line.txt
;;
group3)
awk -v time_i="$t1" -v time_f="$t2"  '{ print $0";"time_i";"time_f}' stations_file_group3.txt > initialization_file_$n_line.txt
;;
tot)
echo "tot;$t1;$t2"                                                                            > initialization_file_$n_line.txt
;;
*)
echo "$gr;$t1;$t2"                                                                            > initialization_file_$n_line.txt
;;
esac

(( n_line = n_line + 1 ))    # pass to the next line inside pre_initialization_file

echo -e "\n\t The first \"pre_initialization_file.txt\" line is converted into $gr;$t1;$t2"
echo -e   "\t where $gr is a monitoring-station or a group of monitoring stations"

done < $pre_initialization_file

#================================================================

%include <tail_4_bash.h>              
