%manual
%include <man/set_dir.man>
%end

%include <head_4_bash.h>                                # Include header common to all tasks. 
                                                        # It manages general calls to ecflow client

%include <etc/general_shy.ini> 
 
#=======================================================================
#           Creation of output directory in public_html
#=======================================================================

srl_n="$simulation_code"


if [[ ! -d $output_validation_plots_root ]]; then    				# if the simulation directory doesn't exists it will be created
                                                                                # and web-page too

echo -e "\t The output plot directory \"$output_validation_plots_root\" and public web-page doesn't exists. They will be created right now."

#======== Directory creation ========
mkdir -p  $output_validation_plots_root/{boxplot_R,sctr_abs_R,TS_diagram_NCL,taylor_R}/season{1..4}
mkdir -p  $output_validation_plots_root/{boxplot_R,sctr_abs_R,TS_diagram_NCL,taylor_R}/{1..2}S
mkdir -p  $output_validation_plots_root/{boxplot_R,sctr_abs_R,TS_diagram_NCL,taylor_R}/tot

#======== Copy of logos directory ========
cp -r /lustre/arpa/CASCADE/public_html/SHYFEM_1995F100D0_AB10_validation/logos    /lustre/arpa/CASCADE/public_html/SHYFEM_${srl_n}_validation/

#======== Copy of html page ========
cp  /lustre/arpa/CASCADE/public_html/SHYFEM_1995F100D0_AB10_validation/SHYFEM_1995F100D0_AB10_HIND_validation.php   \
    /lustre/arpa/CASCADE/public_html/SHYFEM_${srl_n}_validation/SHYFEM_${srl_n}_HIND_validation.php

sed -i "s/1995F100D0_AB10/${srl_n}/g"   /lustre/arpa/CASCADE/public_html/SHYFEM_${srl_n}_validation/SHYFEM_${srl_n}_HIND_validation.php

#========= Symbolic lynk creation =========
ln   -s  /lustre/arpa/AdriaClim/data/shyfem_outputs/${srl_n}/README    /lustre/arpa/CASCADE/public_html/SHYFEM_${srl_n}_validation/HINDCAST/README_${srl_n}

echo -e "\tThe web-page creation is completed!"

else
     echo -e "\t The output plot directory \"$output_validation_plots_root\" alredy exists"
fi

#========================================================================
#     This task is used to prepare the directories of input and output
#     used to put the plots scripts and the output script
#=========================================================================

       output_data_files="$tmp_dir_root/drops_files"
       selected_depths="$tmp_dir_root/selected_depths"
       tmp_dir_root="$tmp_dir_root"
       script_dir="$script_dir"
       tmp_dir_holding="$tmp_dir_holding"

#**************************************************************

       rm_var=0
       create_var=0
       cp_var=0

#==================================================
#         Remotion of holding tmp directory 
#==================================================

#if [    -d $tmp_dir_holding ]; then
#  rm    -r $tmp_dir_holding   || rm_var=1
#fi

#==================================================
#         Creation of working directories
#==================================================

for i in $( seq 1 $( wc -l < $init_file_dir/pre_initialization_file.txt ) )
do

#=============== Output-data files directory ============

if [    -d ${output_data_files}_$i ]; then
  rm    -r $tmp_dir_root          || rm_var=1
  rm    -r ${output_data_files}_$i  || rm_var=1
  mkdir -p ${output_data_files}_$i  || create_var=1
  cp       $script_dir/*    $tmp_dir_root || cp_var=1
else
  mkdir -p ${output_data_files}_$i              || create_var=1
  cp       $script_dir/*    $tmp_dir_root/ || cp_var=1
fi

#============ Selected depths directory ==============

if [    -d ${selected_depths}_$i ]; then
  rm    -r ${selected_depths}_$i  || rm_var=1
  mkdir -p ${selected_depths}_$i  || create_var=1
else
  mkdir -p ${selected_depths}_$i  || create_var=1
fi

done

#============ Output plots directory ==============

if [    -d $output_validation_plots ]; then
  echo -e "\n\t The directory \"$output_validation_plots\" already exists \n"
else
  mkdir -p $output_validation_plots  || create_var=1
fi

#================== Check ===================

if [ $rm_var -eq 1 ] ; then
  echo -e "The directory \"$output_data_files\" and/or \"$selected_depths\"  can't be removed completely."
  EXIT_STATUS=$?
  echo "$EXIT_STATUS"
fi

if [ $cp_var -eq 1 ] ; then
  echo -e "\"$script_dir\" files can't be copied to \"$tmp_dir_root\"."
  EXIT_STATUS=$?
  echo "$EXIT_STATUS"
fi

if [ $create_var -eq 1 ] ; then
  echo -e "The directory \"$output_data_files\" and/or \"$selected_depths\" and/or \"$output_validation_plots\"  can't be created."
  EXIT_STATUS=$?
  echo "$EXIT_STATUS"
fi

echo -e "\n\tThe task \"set_dir\" is now terminated \n"


%include <tail_4_bash.h>               # Include tail common to all tasks.
                                       # It manages general calls to ecflow client

